// generated by Fast Light User Interface Designer (fluid) version 1.0106

#include "gui2.h"
#include "file_chooser.h"

Fl_Dial *thetaD=(Fl_Dial *)0;

Fl_Roller *alphaR=(Fl_Roller *)0;

Fl_Roller *muR=(Fl_Roller *)0;

Fl_Value_Input *numQColorsV=(Fl_Value_Input *)0;

Fl_Value_Input *alphaV=(Fl_Value_Input *)0;

Fl_Value_Input *muV=(Fl_Value_Input *)0;

Fl_Value_Input *thetaV=(Fl_Value_Input *)0;

Fl_Double_Window* make_ctrl_window() {
  Fl_Double_Window* w;
  { Fl_Double_Window* o = new Fl_Double_Window(278, 579);
    w = o;
    o->color((Fl_Color)245);
    { Fl_Group* o = new Fl_Group(5, 10, 265, 430);
      o->box(FL_DOWN_BOX);
      o->color((Fl_Color)215);
      { Fl_Dial* o = thetaD = new Fl_Dial(99, 25, 95, 90, "theta");
        o->box(FL_OSHADOW_BOX);
        o->color(FL_DARK2);
        o->selection_color(FL_DARK_BLUE);
        o->labeltype(FL_EMBOSSED_LABEL);
        o->maximum(360);
        o->step(1);
        o->callback((Fl_Callback*)updateTheta);
      }
      { Fl_Roller* o = alphaR = new Fl_Roller(91, 145, 110, 25, "alpha");
        o->type(1);
        o->color(FL_LIGHT1);
        o->selection_color((Fl_Color)133);
        o->labeltype(FL_EMBOSSED_LABEL);
        o->minimum(1);
        o->maximum(100);
        o->step(1);
        o->value(10);
        o->callback((Fl_Callback*)updateAlpha);
      }
      { Fl_Roller* o = muR = new Fl_Roller(91, 210, 110, 25, "mu");
        o->type(1);
        o->labeltype(FL_EMBOSSED_LABEL);
        o->minimum(1);
        o->maximum(1000);
        o->step(1);
        o->value(32);
        o->callback((Fl_Callback*)updateMu);
      }
      { Fl_Check_Button* o = new Fl_Check_Button(72, 270, 25, 25, "Quantize");
        o->down_box(FL_DOWN_BOX);
        o->value(1);
        o->labeltype(FL_EMBOSSED_LABEL);
        o->callback((Fl_Callback*)EnableQuantize);
      }
      { Fl_Value_Input* o = numQColorsV = new Fl_Value_Input(171, 293, 25, 25, "Num Colors");
        o->labeltype(FL_EMBOSSED_LABEL);
        o->maximum(64000);
        o->value(64);
        o->callback((Fl_Callback*)updateNumQColors);
      }
      { Fl_Button* o = new Fl_Button(20, 388, 241, 30, "Run Color2Gray");
        o->box(FL_PLASTIC_DOWN_BOX);
        o->color((Fl_Color)246);
        o->labeltype(FL_EMBOSSED_LABEL);
        o->labelcolor(FL_DARK_BLUE);
        o->callback((Fl_Callback*)run_c2g_callback);
      }
      { Fl_Value_Input* o = alphaV = new Fl_Value_Input(25, 145, 56, 25);
        o->callback((Fl_Callback*)updateAlphaV);
      }
      { Fl_Value_Input* o = muV = new Fl_Value_Input(25, 210, 56, 25);
        o->callback((Fl_Callback*)updateMuV);
      }
      { Fl_Value_Input* o = thetaV = new Fl_Value_Input(25, 55, 56, 25);
        o->callback((Fl_Callback*)updateThetaV);
      }
      { Fl_Button* o = new Fl_Button(17, 340, 241, 25, "LoadSource");
        o->box(FL_PLASTIC_THIN_UP_BOX);
        o->color((Fl_Color)173);
        o->labeltype(FL_EMBOSSED_LABEL);
        o->callback((Fl_Callback*)LoadSource);
      }
      o->end();
    }
    { Fl_Button* o = new Fl_Button(13, 475, 241, 35, "Run Approx. C2G Theta Circle");
      o->box(FL_PLASTIC_DOWN_BOX);
      o->color((Fl_Color)251);
      o->selection_color((Fl_Color)246);
      o->labeltype(FL_EMBOSSED_LABEL);
      o->labelcolor((Fl_Color)121);
      o->callback((Fl_Callback*)run_c2g_thetaCircle);
    }
    { Fl_Button* o = new Fl_Button(15, 525, 236, 35, "Quit");
      o->box(FL_PLASTIC_THIN_UP_BOX);
      o->labeltype(FL_EMBOSSED_LABEL);
      o->callback((Fl_Callback*)quit_cb);
    }
    o->end();
  }
  return w;
}
